AllCops:
  Include:
    - ./Rakefile
    - ./Gemfile
    - ./*.gemspec
  Exclude:
    - ./spec/integration_specs/**/*
    - ./vendor/**/*
    - ./tmp/**/*

# At the moment not ready to be used
# https://github.com/bbatsov/rubocop/issues/947
Documentation:
  Enabled: false

#- Jazzy -----------------------------------------------------------------#

# 20 lines is more reasonable than rubocop's default of 10
Metrics/MethodLength:
  Max: 20

Metrics/AbcSize:
  Enabled: false

Metrics/ModuleLength:
  Enabled: false

# We adopted raise instead of fail.
SignalException:
  EnforcedStyle: only_raise

# They are idiomatic
AssignmentInCondition:
  Enabled: false

# Allow backticks
AsciiComments:
  Enabled: false

# Indentation clarifies logic branches in implementations
IfUnlessModifier:
  Enabled: false

# No enforced convention here.
SingleLineBlockParams:
  Enabled: false

# We only add the comment when needed.
Encoding:
  Enabled: false

# Having these make it easier to *not* forget to add one when adding a new
# value and you can simply copy the previous line.
TrailingCommaInLiteral:
  EnforcedStyleForMultiline: comma

TrailingCommaInArguments:
  EnforcedStyleForMultiline: comma

Style/SpecialGlobalVars:
  Enabled: false

# We prefer explicit `a, _ = arr` to `a, = arr` (which could be misread as a stray comma)
Style/TrailingUnderscoreVariable:
  Enabled: false

# For lambdas nested within certain expressions, this rule forces either ugly
# parens or curly braces that violate the "do/end for multiline blocks" rule.
Lambda:
  Enabled: false

# Disallowing indented "when" clauses destroys readability when using the
# single-line "when/then" style.
CaseIndentation:
  Enabled: false

# These are both subjective judgements that depend on the situation, and are
# not appropriate as absolute rules.
GuardClause:
  Enabled: false
Next:
  Enabled: false

RegexpLiteral:
  EnforcedStyle: mixed

#- Jazzy specs -----------------------------------------------------------#

# Allow for `should.match /regexp/`.
AmbiguousRegexpLiteral:
  Exclude:
    - spec/**/*

# Allow `object.should == object` syntax.
Void:
  Exclude:
    - spec/**/*

ClassAndModuleChildren:
  Exclude:
    - spec/**/*

UselessComparison:
  Exclude:
    - spec/**/*
